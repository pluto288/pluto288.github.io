<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[三天打鱼 两天晒网的我]]></title>
    <url>%2F2018%2F12%2F13%2F%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC-%E4%B8%A4%E5%A4%A9%E6%99%92%E7%BD%91%E7%9A%84%E6%88%91%2F</url>
    <content type="text"><![CDATA[新建一篇文章hexo new post “博客名” 打包上传hexo d -g]]></content>
      <categories>
        <category>使用手册</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pandas--to_datetime 时间转换]]></title>
    <url>%2F2018%2F12%2F13%2Fpandas-to-datetime-%E6%97%B6%E9%97%B4%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[dataframe强转换时间格式123data['ctime'] = pd.to_datetime(data['ctime'],format='%Y-%m-%d %H:%M:%S',errors='coerce') data[data["last_decision_tm"]&gt;'2018-01-01 00:00:00'] http://pandas.pydata.org/pandas-docs/stable/generated/pandas.to_datetime.html ==errors== If ‘raise’, then invalid parsing will raise an exception If ‘coerce’, then invalid parsing will be set as NaT If ‘ignore’, then invalid parsing will return the input 分组计算上下两行时间差（秒） 1osid["diff"] = osid.groupby("ugid")["ctime"].diff().apply(lambda x:x.total_seconds())]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vnm常用查询]]></title>
    <url>%2F2018%2F09%2F03%2Fvnm%E5%B8%B8%E7%94%A8%E6%9F%A5%E8%AF%A2%2F</url>
    <content type="text"><![CDATA[提取数据123456789101112131415drop table if exists public_fkmx.idong_customers_err111;create table public_fkmx.idong_customers_err111 asselect * from(select user_gid, create_time , param_name,param_value, row_number() over(partition by user_gid,param_name order by create_time desc) as rn from (select * from fk.t_dw_fk_derived_fk_log where ds&gt;='20180501' and biz_type='idong' and param_name in ('fk_609_manual_check_result','fk_560_vnmpersonal_auth_state','fk_575_vnmcontact_auth_state','fk_570_vnmiden_auth_state','fk_607_need_manual_check'))a)cwhere rn=1 拼接变量123456789101112131415161718192021222324252627282930313233343536373839drop table if exists public_fkmx.idong_customers_err1112;create table public_fkmx.idong_customers_err1112as select a0.user_gid,b0.param_value as fk_560_vnmpersonal_auth_state,from_unixtime(CAST(SUBSTRING (c0.create_time, 1, 10) AS bigint),'yyyy-MM-dd') as fk_570_vnmiden_auth_state_time,c0.param_value as fk_575_vnmcontact_auth_state,d0.param_value as fk_570_vnmiden_auth_state,from_unixtime(CAST(SUBSTRING (d0.create_time, 1, 10) AS bigint),'yyyy-MM-dd') as iden_time,(hour(from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss'))-hour(from_unixtime(CAST(SUBSTRING (d0.create_time, 1, 10) AS bigint),'yyyy-MM-dd HH:mm:ss'))+(datediff(from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss'), from_unixtime(CAST(SUBSTRING (d0.create_time, 1, 10) AS bigint),'yyyy-MM-dd HH:mm:ss') ))*24) as diff_hours,d0.create_time ,e0.param_value as fk_609_manual_check_result,from_unixtime(CAST(SUBSTRING (d0.create_time, 1, 10) AS bigint),'yyyy-MM-dd') as result_time,f0.param_value as fk_607_need_manual_check,from_unixtime(CAST(SUBSTRING (f0.create_time, 1, 10) AS bigint),'yyyy-MM-dd') as need_time,g0.user_gid_biz,g0.idcard_nofrom (select distinct user_gid from public_fkmx.idong_customers_err111 ) a0 left join(select * from public_fkmx.idong_customers_err111 where param_name = 'fk_560_vnmpersonal_auth_state' ) b0left join (select * from public_fkmx.idong_customers_err111 where param_name = 'fk_575_vnmcontact_auth_state' ) c0on a0.user_gid = c0.user_gidleft join (select * from public_fkmx.idong_customers_err111 where param_name = 'fk_570_vnmiden_auth_state' ) d0on a0.user_gid = d0.user_gidleft join (select * from public_fkmx.idong_customers_err111 where param_name = 'fk_609_manual_check_result' ) e0on a0.user_gid = d0.user_gidleft join (select * from public_fkmx.idong_customers_err111 where param_name = 'fk_607_need_manual_check' ) f0on a0.user_gid = d0.user_gidleft join (select distinct bg_user_gid,user_gid_biz,idcard_no from fk.t_dw_fk_realname where biz_type = "idong") g0on a0.user_gid = g0.bg_user_gid 12select * from public_fkmx.idong_customers_err1112 where fk_560_vnmpersonal_auth_state = 2 and fk_575_vnmcontact_auth_state = 2 and fk_570_vnmiden_auth_state = 0 and ((iden_time &lt;= result_time and need_time &lt;= result_time) or diff_hours &gt;48) 1234567select (hour(from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss'))-hour(from_unixtime(CAST(SUBSTRING (create_time, 1, 10) AS bigint),'yyyy-MM-dd HH:mm:ss'))+(datediff(from_unixtime(unix_timestamp(),'yyyy-MM-dd HH:mm:ss'), from_unixtime(CAST(SUBSTRING (create_time, 1, 10) AS bigint),'yyyy-MM-dd HH:mm:ss') ))*24)from fk.t_dw_fk_derived_fk_log limit 10;]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>hive</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大概很不错]]></title>
    <url>%2F2018%2F05%2F12%2F%E5%96%9C%E6%AC%A2%E4%B8%80%E4%B8%AA%E4%BA%BA%2F</url>
    <content type="text"><![CDATA[从前个姑娘 纸短情长]]></content>
      <categories>
        <category>吐槽</category>
      </categories>
      <tags>
        <tag>第一天</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2015%2F12%2F03%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. this talking about how to use github Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>program</category>
      </categories>
      <tags>
        <tag>第一天</tag>
      </tags>
  </entry>
</search>
